{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service."
      }
    },
    "cosmosDbContainers": {
      "type": "array",
      "metadata": {
        "description": "The containers for the CosmosDB instance."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "appServicePlanName": "[concat(parameters('appServiceName'), '-plan')]",
    "containerRegistryName": "[concat(parameters('appServiceName'), 'acr')]",
    "managedIdentityName": "[concat(parameters('appServiceName'), '_managed_identity')]",
    "managedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
    "cosmosDbAccountName": "[concat(parameters('appServiceName'), '-cosmosdb')]",
    "cosmosDbAccountResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
    "cosmosDbDatabaseName": "[concat(parameters('appServiceName'), 'db')]",
    "cosmosDbBuiltInDataContributorRoleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', variables('cosmosDbAccountName'), '00000000-0000-0000-0000-000000000002')]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('managedIdentityName')",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "tier": "Basic",
        "name": "B1",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "reserved": true,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServiceName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "clientCertEnabled": false,
        "clientCertMode": "Optional",
        "enabled": true,
        "hostNamesDisabled": false,
        "httpsOnly": true,
        "publicNetworkAccess": "Enabled",
        "redundancyMode": "None",
        "scmSiteAlsoStopped": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [],
          "autoSwapSlotName": "",
          "detailedErrorLoggingEnabled": false,
          "healthCheckPath": "/health",
          "httpLoggingEnabled": false,
          "ipSecurityRestrictions": [],
          "ipSecurityRestrictionsDefaultAction": "Allow",
          "minTlsVersion": "1.2",
          "remoteDebuggingEnabled": false,
          "requestTracingEnabled": false,
          "scmType": "None",
          "use32BitWorkerProcess": false,
          "webSocketsEnabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-12-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium"
      },
      "identity": {
        "type": "None",
        "userAssignedIdentities": {}
      },
      "properties": {
        "adminUserEnabled": true,
        "dataEndpointEnabled": false,
        "networkRuleBypassOptions": "AzureServices",
        "networkRuleSet": {
          "defaultAction": "Allow",
          "ipRules": []
        },
        "publicNetworkAccess": "Enabled",
        "zoneRedundancy": "Disabled"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "disableLocalAuth": true,
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "failoverPriority": 0,
            "isZoneRedundant": false,
            "locationName": "[parameters('location')]"
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "containerCopy",
        "count": "[length(parameters('cosmosDbContainers'))]"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'), parameters('cosmosDbContainers')[copyIndex()].name)]",
      "apiVersion": "2023-04-15",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbContainers')[copyIndex()].name]",
          "partitionKey": {
            "paths": ["[parameters('cosmosDbContainers')[copyIndex()].partitionKey]"],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "Consistent"
          }
        },
        "options": {
          "throughput": "[int(parameters('cosmosDbContainers')[copyIndex()].throughput)]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
      "apiVersion": "2023-04-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', guid(variables('cosmosDbBuiltInDataContributorRoleDefinitionId'), variables('managedIdentityResourceId')))]",
      "properties": {
        "roleDefinitionId": "[variables('cosmosDbBuiltInDataContributorRoleDefinitionId')]",
        "principalId": "[reference(variables('managedIdentityResourceId'), '2023-01-31', 'Full').properties.principalId]",
        "scope": "[variables('cosmosDbAccountResourceId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ]
    }
  ],
  "outputs": {
    "appServiceName": {
      "type": "string",
      "value": "[parameters('appServiceName')]"
    }
  }
}
